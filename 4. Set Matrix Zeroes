https://leetcode.com/problems/set-matrix-zeroes/

Bruteforce:
class Solution {
public:
void setrow(vector<vector<int>>&v, int i){
    int k = v[0].size();
    for(int j=0;j<k;j++){
        v[i][j]=0;
    }
}
void setcol(vector<vector<int>>&v, int j){
    int k = v.size();
    for(int i=0;i<k;i++){
        v[i][j]=0;
    }
}
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        vector<vector<int>>v = matrix;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                    setcol(v,j);
                    setrow(v,i);
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                matrix[i][j]=v[i][j];
            }
        }
        
    }
};
T.C.=o(nxm)+o(nxm)
S.C.=o(nxm)

Brutefoce:
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                    for(int k=0;k<n;k++){
                        if(matrix[k][j]!=0){
                            matrix[k][j]=-9999-9999;
                        }
                    }
                    for(int k=0;k<m;k++){
                        if(matrix[i][k]!=0){
                            matrix[i][k]=-9999-9999;
                        }
                    }
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==-9999-9999){
                    matrix[i][j]=0;
                }
            }
        }
        
    }
};
T.C.=o(nxmxn)+o(nxmxm)
S.C.=o(1)

better:
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        int a[n], b[m];
        for(int i=0;i<n;i++){
            a[i]=0;
        }
        for(int i=0;i<m;i++){
            b[i]=0;
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                    a[i]=1;
                    b[j]=1;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(a[i]==1 || b[j]==1){
                    matrix[i][j]=0;
                }
            }
        }
        
    }
};
T.C.=o(nxm)+o(nxm)
S.C.=o(n)+o(m)

optimal:
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        int col=1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                    matrix[i][0]=0;
                    if(j!=0){
                        matrix[0][j]=0;
                    }
                    else{
                        col=0;
                    }
                }
            }
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[0][j]==0 || matrix[i][0]==0){
                    matrix[i][j]=0;
                }
            }
        }
        for(int j=0;j<m;j++){
            if(matrix[0][0]==0){
                matrix[0][j]=0;
            }
        }
        if(col==0){
            for(int i=0;i<n;i++){
                matrix[i][0]=0;
            }
        }
        
    }
};
T.C.=o(nxm)+o(n)+o(m)
S.C.=o(1)
